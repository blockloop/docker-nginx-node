worker_processes 4;

events { worker_connections 1024; }

http {

	upstream node-auth {
		least_conn;
		server auth:3000 weight=10 max_fails=3 fail_timeout=30s;
	}

	upstream static-site {
		least_conn;
		server static weight=10 max_fails=3 fail_timeout=30s;
	}

	server {
		listen 80;

		location / {
			auth_request /auth;

			proxy_pass http://static-site;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection 'upgrade';
			proxy_set_header Host $host;
			proxy_cache_bypass $http_upgrade;
		}

		location = /login {
			proxy_pass http://node-auth;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection 'upgrade';
			proxy_set_header Host $host;
			proxy_cache_bypass $http_upgrade;
		}

		error_page 401 = @error401;
		location @error401 {
			return 302 http://localhost/login;
		}

		location = /auth {
			internal;

			proxy_pass http://node-auth;

			proxy_pass_request_body     off;

			proxy_set_header Content-Length "";
			proxy_set_header X-Original-URI $request_uri;
			proxy_set_header Host $http_host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;

			if ($http_cookie ~* "example_auth_token=([^;]+)(?:;|$)") {
				set $token "$1";
			}
			proxy_set_header X-EXAMPLE-AUTH-Token $token;
		}

	}
}
